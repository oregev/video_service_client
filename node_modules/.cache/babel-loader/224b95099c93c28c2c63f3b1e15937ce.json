{"ast":null,"code":"import axios from \"axios\";\nimport { serverURL } from \"assets/urls/urls\";\nconst GET_VIDEO = \"GET_VIDEO\";\nconst VIDEO_REQUEST_SUCCESS = \"VIDEO_REQUEST_SUCCESS\";\nconst VIDEO_REQUEST_FAIL = \"VIDEO_REQUEST_FAIL\";\nexport const videoReducer = (state = [], action) => {\n  switch (action.type) {\n    case GET_VIDEO:\n      return { ...state,\n        loading: true\n      };\n\n    case VIDEO_REQUEST_SUCCESS:\n      return { ...state,\n        loading: false,\n        video: action.payload\n      };\n\n    case VIDEO_REQUEST_FAIL:\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const getVideo = id => async dispatch => {\n  try {\n    dispatch({\n      type: GET_VIDEO,\n      payload: \"\"\n    });\n    const {\n      data\n    } = await axios.get(`${serverURL}${id}`);\n    dispatch({\n      type: VIDEO_REQUEST_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: VIDEO_REQUEST_FAIL,\n      payload: err.response\n    });\n  }\n};","map":{"version":3,"sources":["/Users/earth/deploy-test/video_service/frontend/src/views/player/playerSlice.js"],"names":["axios","serverURL","GET_VIDEO","VIDEO_REQUEST_SUCCESS","VIDEO_REQUEST_FAIL","videoReducer","state","action","type","loading","video","payload","error","getVideo","id","dispatch","data","get","err","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,qBAAqB,GAAG,uBAA9B;AACA,MAAMC,kBAAkB,GAAG,oBAA3B;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACnD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKN,SAAL;AACC,aAAO,EACN,GAAGI,KADG;AAENG,QAAAA,OAAO,EAAE;AAFH,OAAP;;AAID,SAAKN,qBAAL;AACC,aAAO,EACN,GAAGG,KADG;AAENG,QAAAA,OAAO,EAAE,KAFH;AAGNC,QAAAA,KAAK,EAAEH,MAAM,CAACI;AAHR,OAAP;;AAKD,SAAKP,kBAAL;AACC,aAAO,EACN,GAAGE,KADG;AAENG,QAAAA,OAAO,EAAE,KAFH;AAGNG,QAAAA,KAAK,EAAEL,MAAM,CAACI;AAHR,OAAP;;AAKD;AACC,aAAOL,KAAP;AAnBF;AAqBA,CAtBM;AAwBP,OAAO,MAAMO,QAAQ,GAAIC,EAAD,IAAQ,MAAOC,QAAP,IAAoB;AACnD,MAAI;AACHA,IAAAA,QAAQ,CAAC;AACRP,MAAAA,IAAI,EAAEN,SADE;AAERS,MAAAA,OAAO,EAAE;AAFD,KAAD,CAAR;AAKA,UAAM;AAAEK,MAAAA;AAAF,QAAW,MAAMhB,KAAK,CAACiB,GAAN,CAAW,GAAEhB,SAAU,GAAEa,EAAG,EAA5B,CAAvB;AAEAC,IAAAA,QAAQ,CAAC;AACRP,MAAAA,IAAI,EAAEL,qBADE;AAERQ,MAAAA,OAAO,EAAEK;AAFD,KAAD,CAAR;AAIA,GAZD,CAYE,OAAOE,GAAP,EAAY;AACbH,IAAAA,QAAQ,CAAC;AACRP,MAAAA,IAAI,EAAEJ,kBADE;AAERO,MAAAA,OAAO,EAAEO,GAAG,CAACC;AAFL,KAAD,CAAR;AAIA;AACD,CAnBM","sourcesContent":["import axios from \"axios\";\nimport { serverURL } from \"assets/urls/urls\";\n\nconst GET_VIDEO = \"GET_VIDEO\";\nconst VIDEO_REQUEST_SUCCESS = \"VIDEO_REQUEST_SUCCESS\";\nconst VIDEO_REQUEST_FAIL = \"VIDEO_REQUEST_FAIL\";\n\nexport const videoReducer = (state = [], action) => {\n\tswitch (action.type) {\n\t\tcase GET_VIDEO:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t};\n\t\tcase VIDEO_REQUEST_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\tvideo: action.payload,\n\t\t\t};\n\t\tcase VIDEO_REQUEST_FAIL:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\terror: action.payload,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport const getVideo = (id) => async (dispatch) => {\n\ttry {\n\t\tdispatch({\n\t\t\ttype: GET_VIDEO,\n\t\t\tpayload: \"\",\n\t\t});\n\n\t\tconst { data } = await axios.get(`${serverURL}${id}`);\n\n\t\tdispatch({\n\t\t\ttype: VIDEO_REQUEST_SUCCESS,\n\t\t\tpayload: data,\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: VIDEO_REQUEST_FAIL,\n\t\t\tpayload: err.response,\n\t\t});\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}