{"ast":null,"code":"import axios from \"axios\";\nimport { setFavorites } from \"views/trends/trendsSlice\";\nimport { store } from \"redux/store\";\nimport { serverURL } from \"assets/urls/urls\";\nconst GET_FAVORITES_DATA = \"GET_FAVORITS_DATA\";\nconst FAVORITES_REQUEST_SUCCESS = \"FAVORITES_REQUEST_SUCCESS\";\nconst FAVORITES_REQUEST_FAIL = \"FAVORITES_REQUEST_FAIL\";\nconst UPDATE_FAVORITES_DATA = \"UPDATE_FAVORITES_DATA\";\nconst UPDATE_TRENDS_DATA = \"UPDATE_TRENDS_DATA\";\nexport const favoritesReducer = (state = [], action) => {\n  switch (action.type) {\n    case GET_FAVORITES_DATA:\n      return { ...state,\n        loading: true\n      };\n\n    case FAVORITES_REQUEST_SUCCESS:\n      return { ...state,\n        loading: false,\n        favorites: action.payload\n      };\n\n    case FAVORITES_REQUEST_FAIL:\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    case UPDATE_FAVORITES_DATA:\n      return { ...state,\n        loading: false,\n        favorites: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const updateFavorites = payload => ({\n  type: UPDATE_FAVORITES_DATA,\n  payload\n});\nexport const getFavoritesData = () => async dispatch => {\n  try {\n    dispatch({\n      type: GET_FAVORITES_DATA,\n      payload: \"\"\n    });\n    const {\n      data\n    } = await axios.get(`${serverURL}/videos/`);\n    dispatch({\n      type: FAVORITES_REQUEST_SUCCESS,\n      payload: {\n        videos: data,\n        token: \"\"\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: FAVORITES_REQUEST_FAIL,\n      payload: err.response\n    });\n  }\n};\nexport const saveVideo = video => async dispatch => {\n  try {\n    await axios.put(`${serverURL}/videos/${video.id}`, video);\n    dispatch({\n      type: UPDATE_FAVORITES_DATA,\n      payload: \"\"\n    });\n  } catch (err) {\n    dispatch({\n      type: FAVORITES_REQUEST_FAIL,\n      payload: err.response\n    });\n  }\n};\nexport const removeVideo = id => async dispatch => {\n  const state = store.getState();\n  const favorites = state.favorites.favorites.videos;\n  const trends = state.trends.trends.videos;\n\n  try {\n    await axios.delete(`${serverURL}/videos/${id}`);\n    const remainingFavorits = favorites.filter(video => video.id !== id);\n    dispatch({\n      type: UPDATE_FAVORITES_DATA,\n      payload: {\n        videos: remainingFavorits,\n        token: \"\"\n      }\n    });\n    const formatedTrends = setFavorites(trends);\n    dispatch({\n      type: UPDATE_TRENDS_DATA,\n      payload: {\n        videos: formatedTrends,\n        token: \"\"\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: FAVORITES_REQUEST_FAIL,\n      payload: err.response\n    });\n  }\n};","map":{"version":3,"sources":["/Users/earth/deploy-test/video_service/frontend/src/views/favorites/favoritesSlice.js"],"names":["axios","setFavorites","store","serverURL","GET_FAVORITES_DATA","FAVORITES_REQUEST_SUCCESS","FAVORITES_REQUEST_FAIL","UPDATE_FAVORITES_DATA","UPDATE_TRENDS_DATA","favoritesReducer","state","action","type","loading","favorites","payload","error","updateFavorites","getFavoritesData","dispatch","data","get","videos","token","err","response","saveVideo","video","put","id","removeVideo","getState","trends","delete","remainingFavorits","filter","formatedTrends"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { setFavorites } from \"views/trends/trendsSlice\";\nimport { store } from \"redux/store\";\nimport { serverURL } from \"assets/urls/urls\";\n\nconst GET_FAVORITES_DATA = \"GET_FAVORITS_DATA\";\nconst FAVORITES_REQUEST_SUCCESS = \"FAVORITES_REQUEST_SUCCESS\";\nconst FAVORITES_REQUEST_FAIL = \"FAVORITES_REQUEST_FAIL\";\nconst UPDATE_FAVORITES_DATA = \"UPDATE_FAVORITES_DATA\";\nconst UPDATE_TRENDS_DATA = \"UPDATE_TRENDS_DATA\";\n\nexport const favoritesReducer = (state = [], action) => {\n\tswitch (action.type) {\n\t\tcase GET_FAVORITES_DATA:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t};\n\t\tcase FAVORITES_REQUEST_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\tfavorites: action.payload,\n\t\t\t};\n\t\tcase FAVORITES_REQUEST_FAIL:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\terror: action.payload,\n\t\t\t};\n\n\t\tcase UPDATE_FAVORITES_DATA:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\tfavorites: action.payload,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport const updateFavorites = (payload) => ({\n\ttype: UPDATE_FAVORITES_DATA,\n\tpayload,\n});\n\nexport const getFavoritesData = () => async (dispatch) => {\n\ttry {\n\t\tdispatch({\n\t\t\ttype: GET_FAVORITES_DATA,\n\t\t\tpayload: \"\",\n\t\t});\n\n\t\tconst { data } = await axios.get(`${serverURL}/videos/`);\n\t\tdispatch({\n\t\t\ttype: FAVORITES_REQUEST_SUCCESS,\n\t\t\tpayload: { videos: data, token: \"\" },\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: FAVORITES_REQUEST_FAIL,\n\t\t\tpayload: err.response,\n\t\t});\n\t}\n};\n\nexport const saveVideo = (video) => async (dispatch) => {\n\ttry {\n\t\tawait axios.put(`${serverURL}/videos/${video.id}`, video);\n\n\t\tdispatch({\n\t\t\ttype: UPDATE_FAVORITES_DATA,\n\t\t\tpayload: \"\",\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: FAVORITES_REQUEST_FAIL,\n\t\t\tpayload: err.response,\n\t\t});\n\t}\n};\n\nexport const removeVideo = (id) => async (dispatch) => {\n\tconst state = store.getState();\n\tconst favorites = state.favorites.favorites.videos;\n\tconst trends = state.trends.trends.videos;\n\n\ttry {\n\t\tawait axios.delete(`${serverURL}/videos/${id}`);\n\n\t\tconst remainingFavorits = favorites.filter((video) => video.id !== id);\n\t\tdispatch({\n\t\t\ttype: UPDATE_FAVORITES_DATA,\n\t\t\tpayload: { videos: remainingFavorits, token: \"\" },\n\t\t});\n\n\t\tconst formatedTrends = setFavorites(trends);\n\t\tdispatch({\n\t\t\ttype: UPDATE_TRENDS_DATA,\n\t\t\tpayload: { videos: formatedTrends, token: \"\" },\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: FAVORITES_REQUEST_FAIL,\n\t\t\tpayload: err.response,\n\t\t});\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}