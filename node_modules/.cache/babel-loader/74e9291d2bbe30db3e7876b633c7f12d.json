{"ast":null,"code":"import axios from \"axios\";\nimport { setFavorites } from \"views/trends/trendsSlice\";\nimport { serverURL } from \"assets/urls/urls\";\nconst SERACH_VIDEOS = \"SERACH_VIDEOS\";\nconst SERACH_VIDEOS_SUCCESS = \"SERACH_VIDEOS_SUCCESS\";\nconst SERACH_VIDEOS_FAIL = \"SERACH_VIDEOS_FAIL\";\nconst UPDATE_TRENDS_DATA = \"UPDATE_TRENDS_DATA\";\nexport const searchReducer = (state = [], action) => {\n  switch (action.type) {\n    case SERACH_VIDEOS:\n      return { ...state,\n        loading: true\n      };\n\n    case SERACH_VIDEOS_SUCCESS:\n      return { ...state,\n        loading: false,\n        searchResults: action.payload\n      };\n\n    case SERACH_VIDEOS_FAIL:\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const searchVideos = searchParam => async dispatch => {\n  try {\n    dispatch({\n      type: SERACH_VIDEOS,\n      payload: \"\"\n    });\n    const {\n      data\n    } = await axios.get(`${serverURL}search?name=${searchParam}`);\n    const {\n      items,\n      nextPageToken\n    } = data;\n    const formatedVideos = setFavorites(items);\n    dispatch({\n      type: SERACH_VIDEOS_SUCCESS,\n      payload: {\n        videos: formatedVideos,\n        token: nextPageToken\n      }\n    });\n    dispatch({\n      type: UPDATE_TRENDS_DATA,\n      payload: {\n        videos: formatedVideos,\n        token: nextPageToken\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: SERACH_VIDEOS_FAIL,\n      payload: err.response\n    });\n  }\n};","map":{"version":3,"sources":["/Users/earth/deployed/video_service/frontend/src/components/header/search/searchSlice.js"],"names":["axios","setFavorites","serverURL","SERACH_VIDEOS","SERACH_VIDEOS_SUCCESS","SERACH_VIDEOS_FAIL","UPDATE_TRENDS_DATA","searchReducer","state","action","type","loading","searchResults","payload","error","searchVideos","searchParam","dispatch","data","get","items","nextPageToken","formatedVideos","videos","token","err","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,MAAMC,aAAa,GAAG,eAAtB;AACA,MAAMC,qBAAqB,GAAG,uBAA9B;AACA,MAAMC,kBAAkB,GAAG,oBAA3B;AACA,MAAMC,kBAAkB,GAAG,oBAA3B;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACpD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKP,aAAL;AACC,aAAO,EACN,GAAGK,KADG;AAENG,QAAAA,OAAO,EAAE;AAFH,OAAP;;AAID,SAAKP,qBAAL;AACC,aAAO,EACN,GAAGI,KADG;AAENG,QAAAA,OAAO,EAAE,KAFH;AAGNC,QAAAA,aAAa,EAAEH,MAAM,CAACI;AAHhB,OAAP;;AAKD,SAAKR,kBAAL;AACC,aAAO,EACN,GAAGG,KADG;AAENG,QAAAA,OAAO,EAAE,KAFH;AAGNG,QAAAA,KAAK,EAAEL,MAAM,CAACI;AAHR,OAAP;;AAKD;AACC,aAAOL,KAAP;AAnBF;AAqBA,CAtBM;AAwBP,OAAO,MAAMO,YAAY,GAAIC,WAAD,IAAiB,MAAOC,QAAP,IAAoB;AAChE,MAAI;AACHA,IAAAA,QAAQ,CAAC;AACRP,MAAAA,IAAI,EAAEP,aADE;AAERU,MAAAA,OAAO,EAAE;AAFD,KAAD,CAAR;AAIA,UAAM;AAAEK,MAAAA;AAAF,QAAW,MAAMlB,KAAK,CAACmB,GAAN,CAAW,GAAEjB,SAAU,eAAcc,WAAY,EAAjD,CAAvB;AAEA,UAAM;AAAEI,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAA2BH,IAAjC;AACA,UAAMI,cAAc,GAAGrB,YAAY,CAACmB,KAAD,CAAnC;AAEAH,IAAAA,QAAQ,CAAC;AACRP,MAAAA,IAAI,EAAEN,qBADE;AAERS,MAAAA,OAAO,EAAE;AAAEU,QAAAA,MAAM,EAAED,cAAV;AAA0BE,QAAAA,KAAK,EAAEH;AAAjC;AAFD,KAAD,CAAR;AAIAJ,IAAAA,QAAQ,CAAC;AACRP,MAAAA,IAAI,EAAEJ,kBADE;AAERO,MAAAA,OAAO,EAAE;AAAEU,QAAAA,MAAM,EAAED,cAAV;AAA0BE,QAAAA,KAAK,EAAEH;AAAjC;AAFD,KAAD,CAAR;AAIA,GAlBD,CAkBE,OAAOI,GAAP,EAAY;AACbR,IAAAA,QAAQ,CAAC;AACRP,MAAAA,IAAI,EAAEL,kBADE;AAERQ,MAAAA,OAAO,EAAEY,GAAG,CAACC;AAFL,KAAD,CAAR;AAIA;AACD,CAzBM","sourcesContent":["import axios from \"axios\";\nimport { setFavorites } from \"views/trends/trendsSlice\";\nimport { serverURL } from \"assets/urls/urls\";\n\nconst SERACH_VIDEOS = \"SERACH_VIDEOS\";\nconst SERACH_VIDEOS_SUCCESS = \"SERACH_VIDEOS_SUCCESS\";\nconst SERACH_VIDEOS_FAIL = \"SERACH_VIDEOS_FAIL\";\nconst UPDATE_TRENDS_DATA = \"UPDATE_TRENDS_DATA\";\n\nexport const searchReducer = (state = [], action) => {\n\tswitch (action.type) {\n\t\tcase SERACH_VIDEOS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t};\n\t\tcase SERACH_VIDEOS_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\tsearchResults: action.payload,\n\t\t\t};\n\t\tcase SERACH_VIDEOS_FAIL:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\terror: action.payload,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport const searchVideos = (searchParam) => async (dispatch) => {\n\ttry {\n\t\tdispatch({\n\t\t\ttype: SERACH_VIDEOS,\n\t\t\tpayload: \"\",\n\t\t});\n\t\tconst { data } = await axios.get(`${serverURL}search?name=${searchParam}`);\n\n\t\tconst { items, nextPageToken } = data;\n\t\tconst formatedVideos = setFavorites(items);\n\n\t\tdispatch({\n\t\t\ttype: SERACH_VIDEOS_SUCCESS,\n\t\t\tpayload: { videos: formatedVideos, token: nextPageToken },\n\t\t});\n\t\tdispatch({\n\t\t\ttype: UPDATE_TRENDS_DATA,\n\t\t\tpayload: { videos: formatedVideos, token: nextPageToken },\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: SERACH_VIDEOS_FAIL,\n\t\t\tpayload: err.response,\n\t\t});\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}