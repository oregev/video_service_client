{"ast":null,"code":"import axios from \"axios\";\nimport { store } from \"redux/store\";\nimport { serverURL } from \"assets/urls/urls\";\nconst GET_TRENDS_DATA = \"GET_TRENDS_DATA\";\nconst TRENDS_REQUEST_SUCCESS = \"TRENDS_REQUEST_SUCCESS\";\nconst TRENDS_REQUEST_FAIL = \"TRENDS_REQUEST_FAIL\";\nconst UPDATE_TRENDS_DATA = \"UPDATE_TRENDS_DATA\";\nexport const trendsReducer = (state = [], action) => {\n  switch (action.type) {\n    case GET_TRENDS_DATA:\n      return { ...state,\n        loading: true\n      };\n\n    case TRENDS_REQUEST_SUCCESS:\n      return { ...state,\n        loading: false,\n        trends: action.payload\n      };\n\n    case TRENDS_REQUEST_FAIL:\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    case UPDATE_TRENDS_DATA:\n      return { ...state,\n        loading: false,\n        trends: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const updateTrends = payload => ({\n  type: UPDATE_TRENDS_DATA,\n  payload\n});\n\nconst isFavorite = (video, favorites) => favorites.some(fav => fav.id === video.id);\n\nexport const setFavorites = videos => {\n  const state = store.getState();\n  const favorites = state.favorites.favorites.videos;\n  return videos.map(video => {\n    return { ...video,\n      isFavorite: isFavorite(video, favorites)\n    };\n  });\n};\nexport const getTrendsData = () => async dispatch => {\n  try {\n    dispatch({\n      type: GET_TRENDS_DATA,\n      payload: \"\"\n    });\n    const {\n      data\n    } = await axios.get(`${serverURL}trend`);\n    const {\n      items,\n      nextPageToken\n    } = data;\n    const formatedVideos = setFavorites(items);\n    dispatch({\n      type: TRENDS_REQUEST_SUCCESS,\n      payload: {\n        videos: formatedVideos,\n        token: nextPageToken\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: TRENDS_REQUEST_FAIL,\n      payload: err.response\n    });\n  }\n};\nexport const getNextTrends = token => async dispatch => {\n  const state = store.getState();\n  const trends = state.trends.trends;\n\n  try {\n    const {\n      data\n    } = await axios.get(`${serverURL}trend?page=${token}`);\n    const {\n      items,\n      nextPageToken\n    } = data;\n    const formatedVideos = setFavorites(items);\n    dispatch({\n      type: UPDATE_TRENDS_DATA,\n      payload: {\n        videos: [...trends.videos, ...formatedVideos],\n        token: nextPageToken\n      }\n    });\n  } catch (error) {\n    console.log(\"Error loading more\", error);\n  }\n};","map":{"version":3,"sources":["/Users/earth/deploy-test/video_service/frontend/src/views/trends/trendsSlice.js"],"names":["axios","store","serverURL","GET_TRENDS_DATA","TRENDS_REQUEST_SUCCESS","TRENDS_REQUEST_FAIL","UPDATE_TRENDS_DATA","trendsReducer","state","action","type","loading","trends","payload","error","updateTrends","isFavorite","video","favorites","some","fav","id","setFavorites","videos","getState","map","getTrendsData","dispatch","data","get","items","nextPageToken","formatedVideos","token","err","response","getNextTrends","console","log"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { store } from \"redux/store\";\nimport { serverURL } from \"assets/urls/urls\";\n\nconst GET_TRENDS_DATA = \"GET_TRENDS_DATA\";\nconst TRENDS_REQUEST_SUCCESS = \"TRENDS_REQUEST_SUCCESS\";\nconst TRENDS_REQUEST_FAIL = \"TRENDS_REQUEST_FAIL\";\nconst UPDATE_TRENDS_DATA = \"UPDATE_TRENDS_DATA\";\n\nexport const trendsReducer = (state = [], action) => {\n\tswitch (action.type) {\n\t\tcase GET_TRENDS_DATA:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t};\n\t\tcase TRENDS_REQUEST_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\ttrends: action.payload,\n\t\t\t};\n\t\tcase TRENDS_REQUEST_FAIL:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\terror: action.payload,\n\t\t\t};\n\n\t\tcase UPDATE_TRENDS_DATA:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\ttrends: action.payload,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport const updateTrends = (payload) => ({\n\ttype: UPDATE_TRENDS_DATA,\n\tpayload,\n});\n\nconst isFavorite = (video, favorites) => favorites.some((fav) => fav.id === video.id);\n\nexport const setFavorites = (videos) => {\n\tconst state = store.getState();\n\tconst favorites = state.favorites.favorites.videos;\n\treturn videos.map((video) => {\n\t\treturn { ...video, isFavorite: isFavorite(video, favorites) };\n\t});\n};\n\nexport const getTrendsData = () => async (dispatch) => {\n\ttry {\n\t\tdispatch({\n\t\t\ttype: GET_TRENDS_DATA,\n\t\t\tpayload: \"\",\n\t\t});\n\n\t\tconst { data } = await axios.get(`${serverURL}trend`);\n\t\tconst { items, nextPageToken } = data;\n\t\tconst formatedVideos = setFavorites(items);\n\n\t\tdispatch({\n\t\t\ttype: TRENDS_REQUEST_SUCCESS,\n\t\t\tpayload: { videos: formatedVideos, token: nextPageToken },\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: TRENDS_REQUEST_FAIL,\n\t\t\tpayload: err.response,\n\t\t});\n\t}\n};\n\nexport const getNextTrends = (token) => async (dispatch) => {\n\tconst state = store.getState();\n\tconst trends = state.trends.trends;\n\ttry {\n\t\tconst { data } = await axios.get(`${serverURL}trend?page=${token}`);\n\t\tconst { items, nextPageToken } = data;\n\t\tconst formatedVideos = setFavorites(items);\n\n\t\tdispatch({\n\t\t\ttype: UPDATE_TRENDS_DATA,\n\t\t\tpayload: { videos: [...trends.videos, ...formatedVideos], token: nextPageToken },\n\t\t});\n\t} catch (error) {\n\t\tconsole.log(\"Error loading more\", error);\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}