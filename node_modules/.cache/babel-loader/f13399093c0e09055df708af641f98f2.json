{"ast":null,"code":"var _jsxFileName = \"/Users/earth/deployed/video_service/frontend/src/views/player/Player.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getVideo } from \"./playerSlice\";\nimport { useParams } from \"react-router-dom\";\nimport { InfoBar } from \"./infoBar/InfoBar\";\nimport \"./player.css\";\nimport { Spinner } from \"components/spinner/Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Player = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n  const data = useSelector(state => state.video);\n  const {\n    video,\n    loading\n  } = data;\n  useEffect(() => dispatch(getVideo(id)), [dispatch, id]);\n  useEffect(() => {\n    window.scroll({\n      top: 0,\n      left: 0,\n      behavior: \"smooth\"\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"view\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"PLAYER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player--container\",\n      children: [!loading && video ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: video.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          poster: video.thumbnailUrl,\n          controls: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(InfoBar, {\n          data: video\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"player--note\",\n        children: \"NOTE: This is a mockup version for a video service without the actual video stream implementation !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Player, \"aMjZYC2IT0lchv/J1Gdl5YiEyTo=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n\n_c = Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/Users/earth/deployed/video_service/frontend/src/views/player/Player.js"],"names":["React","useEffect","useDispatch","useSelector","getVideo","useParams","InfoBar","Spinner","Player","id","dispatch","data","state","video","loading","window","scroll","top","left","behavior","title","thumbnailUrl"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,OAAO,cAAP;AACA,SAASC,OAAT,QAAwB,4BAAxB;;;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAASJ,SAAS,EAAxB;AACA,QAAMK,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,IAAI,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,KAAlB,CAAxB;AACA,QAAM;AAAEA,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAqBH,IAA3B;AAEAV,EAAAA,SAAS,CAAC,MAAMS,QAAQ,CAACN,QAAQ,CAACK,EAAD,CAAT,CAAf,EAA+B,CAACC,QAAD,EAAWD,EAAX,CAA/B,CAAT;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACfc,IAAAA,MAAM,CAACC,MAAP,CAAc;AACbC,MAAAA,GAAG,EAAE,CADQ;AAEbC,MAAAA,IAAI,EAAE,CAFO;AAGbC,MAAAA,QAAQ,EAAE;AAHG,KAAd;AAKA,GANQ,CAAT;AAQA,sBACC;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACC;AAAA,6BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD,eAIC;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,iBACE,CAACL,OAAD,IAAYD,KAAZ,gBACA;AAAA,gCACC;AAAA,oBAAKA,KAAK,CAACO;AAAX;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAO,UAAA,MAAM,EAAEP,KAAK,CAACQ,YAArB;AAAmC,UAAA,QAAQ;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC,QAAC,OAAD;AAAS,UAAA,IAAI,EAAER;AAAf;AAAA;AAAA;AAAA;AAAA,gBAHD;AAAA,sBADA,gBAOA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cARF,eAUC;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVD;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAqBA,CArCM;;GAAML,M;UACGH,S,EACEH,W,EACJC,W;;;KAHDK,M","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getVideo } from \"./playerSlice\";\nimport { useParams } from \"react-router-dom\";\nimport { InfoBar } from \"./infoBar/InfoBar\";\nimport \"./player.css\";\nimport { Spinner } from \"components/spinner/Spinner\";\n\nexport const Player = () => {\n\tconst { id } = useParams();\n\tconst dispatch = useDispatch();\n\tconst data = useSelector((state) => state.video);\n\tconst { video, loading } = data;\n\n\tuseEffect(() => dispatch(getVideo(id)), [dispatch, id]);\n\n\tuseEffect(() => {\n\t\twindow.scroll({\n\t\t\ttop: 0,\n\t\t\tleft: 0,\n\t\t\tbehavior: \"smooth\",\n\t\t});\n\t});\n\n\treturn (\n\t\t<div className=\"view\">\n\t\t\t<header>\n\t\t\t\t<span>PLAYER</span>\n\t\t\t</header>\n\t\t\t<div className=\"player--container\">\n\t\t\t\t{!loading && video ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<h3>{video.title}</h3>\n\t\t\t\t\t\t<video poster={video.thumbnailUrl} controls />\n\t\t\t\t\t\t<InfoBar data={video} />\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<Spinner />\n\t\t\t\t)}\n\t\t\t\t<span className=\"player--note\">\n\t\t\t\t\tNOTE: This is a mockup version for a video service without the actual video stream implementation !\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}